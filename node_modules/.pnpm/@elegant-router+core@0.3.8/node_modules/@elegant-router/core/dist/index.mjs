import W from"micromatch";import x from"fast-glob";import F from"node:process";import G from"node:path";import{consola as T}from"consola";import{watch as z}from"chokidar";import{lightGreen as C}from"kolorist";function D(r,t,e){const{sync:s}=x;return s(r,{onlyFiles:!0,cwd:e,ignore:t}).sort()}function _(r,t,e){return G.posix.join(e,t,r)}function b(r){return r.replace(/\\/g,"/")}function I(r){const t="src/views",e=["**/index.vue","**/[[]*[]].vue"],s=["**/components/**"],o={cwd:F.cwd(),pageDir:t,alias:{"@":"src"},pagePatterns:e,pageExcludePatterns:s,routeNameTransformer:n=>n,routePathTransformer:(n,a)=>a,log:!0,...r};return o.cwd=b(o.cwd),o}const m="/",u="_",L=/^[\w-]+[0-9a-zA-Z]+$/,S=/^[0-9a-zA-Z]+[0-9a-zA-Z-]+[0-9a-zA-Z]+\.[a-z]+$/,$=/^\[\w+\]\.[a-z]+$/,j=/[A-Z]/g;function Z(r,t){const e=r.split(m).reverse(),[s,...o]=e,n=[[e.length<2,`The glob "${t}" is invalid, it must has the parent directory.`],...o.map(a=>[!L.test(a),`The directory name "${a}" of the glob "${t}" is invalid.`]),[!S.test(s)&&!$.test(s),`The file name "${s}" of the glob "${t}" is invalid.`]];return j.test(r)&&T.info(`The glob "${r}" contains uppercase letters, it recommended to use lowercase letters.`),n.every(([a,i])=>(a&&T.warn(i),!a))}function N(r,t){const{cwd:e,pageDir:s,alias:o,routeNameTransformer:n}=t,a=_(r,s,e);let i=G.posix.join(s,r);Object.entries(o).some(g=>{const[M,R]=g,A=i.startsWith(R);return A&&(i=i.replace(R,M)),A});const l=r.split(m).reverse(),[h,...c]=l,f=c.filter(g=>!g.startsWith(u)).reverse(),P=n(f.join(u).toLocaleLowerCase());let d=w(P),E="";if($.test(h)){const[g]=h.split(".");E=g.replace(/\[|\]/g,""),d=`${d}/:${E}`}return{glob:r,fullPath:a,importPath:i,routeName:P,routePath:t.routePathTransformer(P,d),routeParamKey:E}}function O(r,t){const e=new Map;return r.forEach(s=>{const{routeName:o,routePath:n}=s;y(o).forEach(a=>{if(!e.has(a)){const i=a===o,l=i?a:t.routeNameTransformer(a),h=i?n:t.routePathTransformer(l,w(a));e.set(l,h)}})}),e}function V(r){const t=[];return r.forEach((e,s)=>{t.push([s,e])}),t.sort((e,s)=>e[0].localeCompare(s[0]))}function B(r,t){const e=new Map;r.forEach(([o])=>{if(!o.includes(u))e.set(o,[]);else{const n=o.split(u)[0],a=o.split(u).length,i=e.get(n)||[],l=i[a-2]||[];l.push(o),i[a-2]=l,e.set(n,i)}});const s=[];return e.forEach((o,n)=>{const a={routeName:n,routePath:t.get(n)||""},i=v(n,o,t);i.length>0&&(a.children=i),s.push(a)}),s}function v(r,t,e){if(t.length===0)return[];const[s,...o]=t;return s.filter(n=>n.startsWith(r)).map(n=>{const a={routeName:n,routePath:e.get(n)||""},i=v(n,o,e);return i.length>0&&(a.children=i),a})}function y(r){return r.split(u).reduce((t,e)=>{const s=t[t.length-1],o=s?`${s}${u}${e}`:e;return t.push(o),t},[])}function w(r){return m+r.replaceAll(u,m)}function H(r,t,e=!0){e&&T[t](`${C("[elegant-router]")} ${r}`)}function K(r,t,e,s=!0){const o=z(".",{ignoreInitial:!0,cwd:r,ignored:t}),n=[];function a(c){n.push(c)}function i(){n.length=0}let l=null;function h(c=500){l||(l=setTimeout(async()=>{await e(n),i(),l&&(clearTimeout(l),l=null)},c))}return o.on("ready",()=>{H("watcher ready","start",s)}),o.on("add",c=>{const f=b(c);a(f),h()}),o.on("unlink",c=>{const f=b(c);a(f),h()}),o}var U=Object.defineProperty,k=(r,t,e)=>t in r?U(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,p=(r,t,e)=>(k(r,typeof t!="symbol"?t+"":t,e),e);class Q{constructor(t={}){p(this,"options"),p(this,"pageGlobs",[]),p(this,"files",[]),p(this,"maps",new Map),p(this,"entries",[]),p(this,"trees",[]),p(this,"fsWatcher"),this.options=I(t),this.scanPages()}scanPages(){this.getPageGlobs(),this.getRouterContextProps()}getPageGlobs(){const{pagePatterns:t,pageExcludePatterns:e,pageDir:s}=this.options,o=D(t,e,s);this.pageGlobs=this.filterValidPageGlobs(o)}filterValidPageGlobs(t,e=!1){const{cwd:s,pageDir:o}=this.options;return t.filter(n=>{const a=_(n,o,s),i=Z(n,a),l=!e||this.isMatchPageGlob(n);return i&&l})}isMatchPageGlob(t){const{pagePatterns:e,pageExcludePatterns:s}=this.options;return W.isMatch(t,e,{ignore:s})}getRouterFileByGlob(t){return N(t,this.options)}getRouterContextProps(){this.files=this.pageGlobs.map(t=>N(t,this.options)),this.maps=O(this.files,this.options),this.entries=V(this.maps),this.trees=B(this.entries,this.maps)}setupFSWatcher(t,e){const{pageDir:s,pageExcludePatterns:o}=this.options;this.fsWatcher=K(s,o,n=>{this.filterValidPageGlobs(n,!0).length>0&&(e?.(),this.scanPages(),t())},this.options.log)}stopFSWatcher(){this.fsWatcher?.close()}}export{u as PAGE_DEGREE_SPLITTER,m as PATH_SPLITTER,Q as default,y as splitRouterName,w as transformRouterNameToPath};
